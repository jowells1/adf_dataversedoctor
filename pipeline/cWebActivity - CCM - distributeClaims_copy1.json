{
	"name": "cWebActivity - CCM - distributeClaims_copy1",
	"properties": {
		"description": "Takes an array of targets, shards into perRequest batches, dispatches to identity pipelines via Switch, then finalizes status per batch.",
		"activities": [
			{
				"name": "ForEach_Batches",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(\n  0,\n  div(add(add(length(pipeline().parameters.targets),pipeline().parameters.perRequest), -1), pipeline().parameters.perRequest))",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "dvOperation_Identity1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"OData-MaxVersion ": "4.0",
									"OData-Version": "4.0",
									"Accept": "application/json",
									"Content-Type": "application/json",
									"MSCRM.BypassBusinessLogicExecution": {
										"value": "@pipeline().parameters.MSCRMBypassBusinessLogicExecution",
										"type": "Expression"
									},
									"MSCRM.SuppressCallbackRegistrationExpanderJob": {
										"value": "@pipeline().parameters.MSCRMSuppressCallbackRegistrationExpanderJob",
										"type": "Expression"
									}
								},
								"httpRequestTimeout": {
									"value": "@pipeline().parameters.timeout",
									"type": "Expression"
								},
								"url": {
									"value": "@{concat(pipeline().parameters.dataverseBaseUrl,'/api/data/v9.2/', pipeline().parameters.entitySetName, '/',pipeline().parameters.dvOperation)}",
									"type": "Expression"
								},
								"body": {
									"value": "@pipeline().parameters.body",
									"type": "Expression"
								},
								"authentication": {
									"resource": {
										"value": "@pipeline().parameters.dataverseBaseUrl",
										"type": "Expression"
									},
									"credential": {
										"referenceName": "DataverseDoctor_jowells_Identity1",
										"type": "CredentialReference"
									},
									"type": "UserAssignedManagedIdentity"
								}
							}
						},
						{
							"name": "Success_FinalizeAccountStagingForClaim_Id2",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('EXEC dbo.usp_FinalizeAccountStagingForClaim @ClaimRunId=''', pipeline().parameters.claimRunId, ''', @NewStatus=''Success'';')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LegacyContact_SQL",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Fail_FinalizeAccountStagingForClaim_Id2",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('EXEC dbo.usp_FinalizeAccountStagingForClaim @ClaimRunId=''', pipeline().parameters.claimRunId, ''', @NewStatus=''Failed'';')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LegacyContact_SQL",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Set-switchValue2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Success_FinalizeAccountStagingForClaim_Id2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "switchValue",
								"value": "Id0"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"targets": {
				"type": "Array"
			},
			"perRequest": {
				"type": "Int",
				"defaultValue": 1000
			},
			"dataverseBaseUrl": {
				"type": "String"
			},
			"entitySetName": {
				"type": "String"
			},
			"dvOperation": {
				"type": "String",
				"defaultValue": "Microsoft.Dynamics.CRM.CreateMultiple"
			},
			"claimRunId": {
				"type": "String"
			},
			"MSCRM_BypassBusinessLogicExecution": {
				"type": "string"
			},
			"MSCRM_SuppressCallbackRegistrationExpanderJob": {
				"type": "string"
			},
			"iterationIndexes": {
				"type": "array",
				"defaultValue": [
					"0",
					"1",
					"2"
				]
			}
		},
		"variables": {
			"switchValue": {
				"type": "String",
				"defaultValue": "Id1"
			},
			"pipelineNames": {
				"type": "Array",
				"defaultValue": [
					"ChildPipeline_Id0",
					"ChildPipeline_Id1",
					"ChildPipeline_Id2"
				]
			}
		},
		"annotations": [
			"Child pipeline used by parent Until loop. Shards 'targets' and calls identity pipelines 0/1/2; finalizes each shard as Success/Failed."
		],
		"lastPublishTime": "2025-08-22T18:26:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}